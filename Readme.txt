1. В папке OrderManager\bin\Debug\net8.0 находится результат сборки проекта, включающий в себя: (два входных файла данных и результирующий) orders.txt, districts.txt и sortedOrders.txt, 
исполняемый файл программы OrderManager.exe и его dll, файл конфигурации app.config (для конфигурации логгера), утилита для генерации списка заказов OrdersGenerator.exe и её dll.
2. Файл orders.txt можно редактировать, добавляя или убирая заказы по шаблону:
id 6c8f8ba9-dcaf-47cb-95f2-0422e78eca39 
weight 10,3 
district 2560491 
time 29-10-2024 03:15:56
;
id 86bc1776-14d2-4b54-8190-5b2f5ae2295a 
weight 12,9 
district 2560494 
time 29-10-2024 03:20:54
;
3. Можно запустить проект OrdersGenerator, чтобы в файле orders.txt все заказы поменялись на новые случайные.
4. Для района заказа используется список id (целочисленного типа), обозначенный в файле districts.txt, через который можно поменять или добавить новые id, допустимые в системе.
Генератор создает новые заказы на основе районов из этого файла. 
5. Для простоты проверки, в генераторе случайных районов, время (часы, минуты и секунды) генерируется случайно, но день всегда 2024-29-10, это можно поменять при необходимости.
6. Консольное приложение имеет две возможности получения входных данных:
через параметры командной строки,
через взаимодействие с пользователем в консоли.
Ниже приведены списки аргументов для командной строки:
_cityDistrict - id района, при отсутсвии запрашивается из командной строки

_firstDeliveryDateTime - время первого заказа, при отсутсвии запрашивается из командной строки

_deliveryOrder - путь к файлу для вывода результата работы, значение по умолчанию sortedOrders.txt

_inputDeliveryOrder - путь к файлу для входных данных (список заказов), значение по умолчанию orders.txt

_districtsList - путь к файлу для входных данных (список доступных районов), если файл не найден или не заполнен, то допускаются все id, соответсвующие целочисленному типу.

Примеры аргументов для командной строки:
_firstDeliveryDateTime=\"29-10-2024 12:00:00\" _cityDistrict=2560493 _deliveryOrder=sortedOrders.txt
7. Для получения детальной информации о процессе работы программы, в проекте используется библиотека log4Net. 
Для получения дополнительной информации о внутренних шагах работы программы, ознакомьтесь с содержимым log-файла соответсвующего интересующему запуску программы (хранит последние 10 log-файлов). 
Вы можете изменить параметры логгера через файл App.config, в соответствии с документацией log4Net. Логи хранятся в папке logs.

